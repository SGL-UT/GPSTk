#.yml file for Gitlab-CI support

stages:
- check
- build
- test
- deploy
- package
- downstream

# Default cmake arguments
variables:
  CMAKE_ARG_DEFAULT: "-DBUILD_EXT=ON -DBUILD_PYTHON=ON -DTEST_SWITCH=ON ../"

# Check Stage
# Runs static analysis on code.
static_analysis:
  stage: check
  tags:
    - debian
  script:
    - ./lint_test.sh
  # Allow failures here to prevent blocking the rest of the pipeline.
  allow_failure: true

# Build Stage
# Builds GPSTk for each platform, saves build artifacts for future stages
build_debian:
  stage: build
  tags:
    - debian
  script:
    - mkdir build
    - cd build
    - export gpstk=`pwd`/install
    - cmake -DPYTHON_INSTALL_PREFIX=$gpstk -DCMAKE_INSTALL_PREFIX=install $CMAKE_ARG_DEFAULT
    - make all -j 4
  artifacts:
    paths:
    - build/

build_redhat:
  stage: build
  tags:
    - redhat
  script:
    - mkdir build
    - cd build
    - export gpstk=`pwd`/install
    - cmake -DPYTHON_INSTALL_PREFIX=$gpstk -DCMAKE_INSTALL_PREFIX=install $CMAKE_ARG_DEFAULT
    - make all -j 4
  artifacts:
    paths:
    - build/

build_osx:
  stage: build
  tags:
    - osx
  script:
    - mkdir build
    - cd build
    - cmake -DPYTHON_INSTALL_PREFIX=install -DCMAKE_INSTALL_PREFIX=install/gpstk $CMAKE_ARG_DEFAULT
    - make all -j 4
  artifacts:
    paths:
    - build/

build_windows:
  stage: build
  tags:
    - windows
  script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=install -DBUILD_EXT=ON -DBUILD_PYTHON=OFF -DTEST_SWITCH=ON -G "Visual Studio 14 2015 Win64" ../
    - cmake --build . --config Release
  artifacts:
    paths:
    - build/
# Temporarily allow failures as Windows Runner issues are resolved
  allow_failure: true

build_core:
  stage: build
  tags:
    - core
  script:
    - mkdir build
    - cd build
    - export gpstk=`pwd`/install
    - cmake -DPYTHON_INSTALL_PREFIX=$gpstk -DCMAKE_INSTALL_PREFIX=install -DCOVERAGE_SWITCH=ON -DBUILD_EXT=OFF -DBUILD_PYTHON=ON -DTEST_SWITCH=ON ../
    - make all -j 4
  artifacts:
    paths:
    - build/

# Test Stage
# Runs all tests of GPSTK for each platform
test_debian:
  stage: test
  tags:
    - debian
  script:
    - cd build
    - ctest -j 4
  dependencies:
    - build_debian

test_redhat:
  stage: test
  tags:
    - redhat
  script:
    - cd build
    - ctest -j 4
  dependencies:
    - build_redhat

test_osx:
  stage: test
  tags:
    - osx
  script:
    - cd build
    - ctest -j 4
  dependencies:
    - build_osx

test_windows:
  stage: test
  tags:
    - windows
  script:
    - cd build
    - cmake --build . --target RUN_TESTS --config Release
  dependencies:
    - build_windows
  allow_failure: true

test_core:
  stage: test
  tags:
    - core
  script:
    - cd build
    - ctest -j 4
    - cd ..
    # Execute once to get the tabular output (which we can scrape for gitlab)
    - echo $PWD
    - gcovr --object-directory=build/core/tests/ORD/CMakeFiles/OrdUnitTests_T.dir -r . -e .*_T.cpp
    # Execute again, generating html
    - mkdir gcovr
    - gcovr --object-directory=build/core/tests/ORD/CMakeFiles/OrdUnitTests_T.dir --html --html-details -o gcovr/index.html -r . -e .*_T.cpp
  dependencies:
    - build_core
  artifacts:
    paths:
    - gcovr
    expire_in: 2 days

# Deploy Stage
# Tests install of GPSTk on each platform, saves artifacts for downstream builds.
deploy_debian:
  stage: deploy
  tags:
    - debian
  script:
    - cd build
    - make install -j 4
  artifacts:
    paths:
    - build/install
  dependencies:
    - build_debian

deploy_redhat:
  stage: deploy
  tags:
    - redhat
  script:
    - cd build
    - make install -j 4
  artifacts:
    paths:
    - build/install
  dependencies:
    - build_redhat

deploy_osx:
  stage: deploy
  tags:
    - osx
  script:
    - cd build
    - make install -j 4
  dependencies:
    - build_osx

deploy_windows:
  stage: deploy
  tags:
    - windows
  script:
    - cd build
    - cmake --build . --config Release --target install
  dependencies:
    - build_windows
# Temporarily allow failures as Windows Runner issues are resolved
  allow_failure: true  

deploy_core:
  stage: deploy
  tags:
    - core
  script:
    - cd build
    - make install -j 4
  artifacts:
    paths:
    - build/install
  dependencies:
    - build_core

# Package Stage
# Tests packaging of GPSTk on all platforms
package_debian:
  stage: package
  tags:
    - debian
  script:
    - cd build
    - make package -j 4
  dependencies:
    - build_debian

package_redhat:
  stage: package
  tags:
    - redhat
  script:
    - cd build
    - make package -j 4
  dependencies:
    - build_redhat

package_osx:
  stage: package
  tags:
    - osx
  script:
    - cd build
    - make package -j 4
  dependencies:
    - build_osx

package_windows:
  stage: package
  tags:
    - windows
  script:
    - cd build
    - cpack -C Release
  dependencies:
    - build_windows
# Temporarily allow failures as Windows Runner issues are resolved
  allow_failure: true

package_core:
  stage: package
  tags:
    - core
  script:
    - cd build
    - make package -j 4
  dependencies:
    - build_core

# Downstream Stage
# Builds SGLTk to test for any downstream issues.
sgltk_core:
  stage: downstream
  tags:
    - core
  script:
    - cd build
    - git clone gitlab@repositories.arlut.utexas.edu:sgl/sgltk.git
    - export gpstk=`pwd`/install
    - export LD_LIBRARY_PATH=$gpstk/lib:$LD_LIBRARY_PATH
    - cd sgltk
    - mkdir build
    - cd build
    - cmake -DCMAKE_PREFIX_PATH=$gpstk -DBUILD_PYTHON=ON -DTEST_SWITCH=ON ../
    - make all -j 4
  dependencies:
    - deploy_core
  allow_failure: true

sgltk_debian:
  stage: downstream
  tags:
    - debian
  script:
    - cd build
    - git clone gitlab@repositories.arlut.utexas.edu:sgl/sgltk.git
    - export gpstk=`pwd`/install
    - export LD_LIBRARY_PATH=$gpstk/lib:$LD_LIBRARY_PATH
    - cd sgltk
    - mkdir build
    - cd build
    - cmake -DCMAKE_PREFIX_PATH=$gpstk -DBUILD_PYTHON=ON -DTEST_SWITCH=ON ../
    - make all -j 4
  dependencies:
    - deploy_debian

sgltk_redhat:
  stage: downstream
  tags:
    - redhat
  script:
    - cd build
    - git clone gitlab@repositories.arlut.utexas.edu:sgl/sgltk.git
    - export gpstk=`pwd`/install
    - export LD_LIBRARY_PATH=$gpstk/lib:$LD_LIBRARY_PATH
    - cd sgltk
    - mkdir build
    - cd build
    - cmake -DCMAKE_PREFIX_PATH=$gpstk -DBUILD_PYTHON=ON -DTEST_SWITCH=ON ../
    - make all -j 4
  dependencies:
    - deploy_redhat
