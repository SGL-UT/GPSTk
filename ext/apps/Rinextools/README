Rinex tools (/apps/Rinextools)

   This directory contains 4 standalone programs which are useful in
manipulating Rinex observation files. They are:
   RinexDump   dumps Rinex observation data in columns in a flat file, useful
               for plotting
   RinSum      summarizes a Rinex observation file
   EditRinex   reads and edits a Rinex observation file, writing out the a
               new, edited one.
   ResCor      reads a Rinex file(s) and computes any of several residuals and
               corrections from the data, and then writes them to an output
               Rinex observation file.
   NavMerge    reads any number of Rinex navigation files and either prints a
               summary on the screen, or, if an output file is specified,
               writes a unique superset of all the ephemeris data to that file.
               It will also correct the week number in the ephemeris if it is
               inconsistent with the time on the epoch line.

   In addition there is the RinexEditor module, which implements a class that
may be called within other programs to edit the Rinex data. The EditRinex program is really just a shell that calls the RinexEditor, while ResCor is a more complicated program that also calls the RinexEditor but also modifies the data (i.e. computes the residuals and corrections) before writing it out.

   All of these programs are run from the command line, and input and outputs are all flat files. To see the command line syntax, run the program with either no arguments, or with arguments but including --help.

   Examples are not included here; however, examples are available elsewhere. RinSum is very easy to run; try typing

   RinSum -i<file>

at the command line for any Rinex observation file <file>. Note, also, that the
discontinuity corrector uses EditRinex to apply its corrections, and that an
example of this is found in /apps/cycleslips/examples. Finally, the RinexPlot utility (/apps/RinexPlot) makes extensive use of the other utility programs
here; it is actually a Perl script and runs these programs from the command 
line.

Brian Tolman
btolman@arlut.utexas.edu










